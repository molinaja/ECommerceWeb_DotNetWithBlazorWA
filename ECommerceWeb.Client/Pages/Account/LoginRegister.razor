@page "/Account/Login"
@inject IUserProxy userProxy
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject IToastService toastService
@inject SweetAlertService Swal
@inject IJSRuntime iJSRuntime

<PageTitle>Login</PageTitle>

<section class="login-tabs padding-large">
    <div class="container my-5 py-5">
        <div class="row">
            <div class="tabs-listing">
                <nav>
                    <div class="nav nav-tabs d-flex justify-content-center border-dark-subtle mb-3" id="nav-tab"
                         role="tablist">
                        <button class="nav-link mx-3 fs-3 border-bottom border-dark-subtle border-0 text-uppercase active"
                                id="nav-sign-in-tab" data-bs-toggle="tab" data-bs-target="#nav-sign-in" type="button"
                                role="tab" aria-controls="nav-sign-in" aria-selected="true">
                            Log In
                        </button>
                        <button class="nav-link mx-3 fs-3 border-bottom border-dark-subtle border-0 text-uppercase"
                                id="nav-register-tab" data-bs-toggle="tab" data-bs-target="#nav-register" type="button"
                                role="tab" aria-controls="nav-register" aria-selected="false">
                            Sign Up
                        </button>
                    </div>
                </nav>

                <div class="tab-content" id="nav-tabContent">

                    @* form login *@
                    <div class="tab-pane fade active show" id="nav-sign-in" role="tabpanel"
                         aria-labelledby="nav-sign-in-tab">
                        <div class="col-lg-8 offset-lg-2 mt-5">

                            <p class="mb-0">Log-In With Social</p>
                            <hr class="my-1">
                            <div class="row mt-4 mb-5">
                                <div class="d-grid col-md-6 my-2">
                                    <a href="#" class="btn btn-outline-dark btn-lg text-uppercase fs-6 rounded-1 ">
                                        <div class="d-flex flex-wrap justify-content-center">
                                            <iconify-icon icon="ion:logo-google"
                                                          class="signup-social-icon me-2"></iconify-icon>
                                            <p class="mb-0">Google</p>
                                        </div>
                                    </a>
                                </div>
                                <div class="d-grid col-md-6 my-2">
                                    <a href="#" class="btn btn-outline-dark btn-lg text-uppercase fs-6 rounded-1 ">
                                        <div class="d-flex flex-wrap justify-content-center">
                                            <iconify-icon icon="ion:logo-facebook"
                                                          class="signup-social-icon me-2"></iconify-icon>
                                            <p class="mb-0">Facebook</p>
                                        </div>
                                    </a>
                                </div>
                            </div>

                            <p class="mb-0">Or Log-In With Email</p>
                            <hr class="my-1">

                            <EditForm Model="loginDtoRequest" OnValidSubmit="ValidLogin" class="form-group flex-wrap ">
                                <div class="form-input col-lg-12 my-4">
                                    <DataAnnotationsValidator />

                                    <input class="form-control mb-3 p-4" type="text" id="username"
                                           @bind-value="loginDtoRequest.UserName" placeholder="Username" />

                                    <ValidationMessage For="@(() => loginDtoRequest.UserName)" />


                                    <input placeholder="Enter password"
                                           class="form-control mb-3 p-4" aria-describedby="passwordHelpBlock" type="password" id="password"
                                           @bind-value="loginDtoRequest.Password" />

                                    <ValidationMessage For="@(() => loginDtoRequest.Password)" />

                                    <label class="py-3 d-flex flex-wrap justify-content-between">
                                        <div>
                                            <input type="checkbox" class="d-inline">
                                            <span class="label-body ">Remember Me</span>
                                        </div>

                                        <div id="passwordHelpBlock" class="form-text ">
                                            <a href="#" class="text-primary  fw-bold"> Forgot Password?</a>
                                        </div>
                                    </label>

                                    <div class="d-grid my-3">
                                        <button class="btn btn-dark btn-lg rounded-1" type="submit">Log in</button>
                                    </div>

                                </div>

                            </EditForm>

                        </div>

                    </div>

                    @* Form register *@
                    <div class="tab-pane fade" id="nav-register" role="tabpanel" aria-labelledby="nav-register-tab">
                        <div class="col-lg-8 offset-lg-2 mt-5">

                            <p class="mb-0">Sign-up With Social</p>
                            <hr class="my-1">
                            <div class="row mt-4 mb-5">
                                <div class="d-grid col-md-6 my-2">
                                    <a href="#" class="btn btn-outline-dark btn-lg text-uppercase fs-6 rounded-1 ">
                                        <div class="d-flex flex-wrap justify-content-center">
                                            <iconify-icon icon="ion:logo-google"
                                                          class="signup-social-icon me-2"></iconify-icon>
                                            <p class="mb-0">Google</p>
                                        </div>
                                    </a>
                                </div>
                                <div class="d-grid col-md-6 my-2">
                                    <a href="#" class="btn btn-outline-dark btn-lg text-uppercase fs-6 rounded-1 ">
                                        <div class="d-flex flex-wrap justify-content-center">
                                            <iconify-icon icon="ion:logo-facebook"
                                                          class="signup-social-icon me-2"></iconify-icon>
                                            <p class="mb-0">Facebook</p>
                                        </div>
                                    </a>
                                </div>
                            </div>


                            <p class="mb-0">Or Sign-Up</p>
                            <hr class="my-1">

                            <EditForm Model="registerUserDtoRequest" OnValidSubmit="ValidRegister" class="form-group flex-wrap ">
                                <div class="form-input col-lg-12 my-4">
                                    <DataAnnotationsValidator />

                                    <input class="form-control mb-3 p-4" type="text" id="Name"
                                           @bind-value="registerUserDtoRequest.Name" placeholder="Name" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.Name)" />

                                    <input class="form-control mb-3 p-4" type="text" id="LastName"
                                           @bind-value="registerUserDtoRequest.LastName" placeholder="Last Name" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.LastName)" />

                                    <input class="form-control mb-3 p-4" type="date" id="birthDate"
                                           @bind-value="registerUserDtoRequest.BirthDate" placeholder="BirthDate" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.BirthDate)" />

                                    <input class="form-control mb-3 p-4" type="text" id="address"
                                           @bind-value="registerUserDtoRequest.Address" placeholder="Address" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.BirthDate)" />

                                    <input class="form-control mb-3 p-4" type="text" id="UsernameReg"
                                           @bind-value="registerUserDtoRequest.UserName" placeholder="UserName" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.UserName)" />

                                    <input class="form-control mb-3 p-4" type="text" id="email"
                                           @bind-value="registerUserDtoRequest.Email" placeholder="E-Mail" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.Email)" />

                                    <input class="form-control mb-3 p-4" type="password" id="passwordReg"
                                           @bind-value="registerUserDtoRequest.Password" placeholder="Password" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.Password)" />

                                    <input class="form-control mb-3 p-4" type="password" id="repassword"
                                           @bind-value="registerUserDtoRequest.ConfirmPassword" placeholder="Re-Password" />
                                    <ValidationMessage For="@(() => registerUserDtoRequest.ConfirmPassword)" />


                                    <div class="d-grid my-3">
                                        <button class="btn btn-dark btn-lg rounded-1" type="submit">Register</button>
                                    </div>

                                </div>

                            </EditForm>

                            

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>

<section id="insta" class="my-5">
    <div class="row g-0 py-5">
        <div class="col instagram-item  text-center position-relative">
            <div class="icon-overlay d-flex justify-content-center position-absolute">
                <iconify-icon class="text-white" icon="la:instagram"></iconify-icon>
            </div>
            <a href="#">
                <img src="css/Theme/images/insta1.jpg" alt="insta-img" class="img-fluid rounded-3">
            </a>
        </div>
        <div class="col instagram-item  text-center position-relative">
            <div class="icon-overlay d-flex justify-content-center position-absolute">
                <iconify-icon class="text-white" icon="la:instagram"></iconify-icon>
            </div>
            <a href="#">
                <img src="css/Theme/images/insta2.jpg" alt="insta-img" class="img-fluid rounded-3">
            </a>
        </div>
        <div class="col instagram-item  text-center position-relative">
            <div class="icon-overlay d-flex justify-content-center position-absolute">
                <iconify-icon class="text-white" icon="la:instagram"></iconify-icon>
            </div>
            <a href="#">
                <img src="css/Theme/images/insta3.jpg" alt="insta-img" class="img-fluid rounded-3">
            </a>
        </div>
        <div class="col instagram-item  text-center position-relative">
            <div class="icon-overlay d-flex justify-content-center position-absolute">
                <iconify-icon class="text-white" icon="la:instagram"></iconify-icon>
            </div>
            <a href="#">
                <img src="css/Theme/images/insta4.jpg" alt="insta-img" class="img-fluid rounded-3">
            </a>
        </div>
        <div class="col instagram-item  text-center position-relative">
            <div class="icon-overlay d-flex justify-content-center position-absolute">
                <iconify-icon class="text-white" icon="la:instagram"></iconify-icon>
            </div>
            <a href="#">
                <img src="css/Theme/images/insta5.jpg" alt="insta-img" class="img-fluid rounded-3">
            </a>
        </div>
        <div class="col instagram-item  text-center position-relative">
            <div class="icon-overlay d-flex justify-content-center position-absolute">
                <iconify-icon class="text-white" icon="la:instagram"></iconify-icon>
            </div>
            <a href="#">
                <img src="css/Theme/images/insta6.jpg" alt="insta-img" class="img-fluid rounded-3">
            </a>
        </div>
    </div>
</section>

@code {

    private LoginDtoRequest loginDtoRequest { get; set; } = new LoginDtoRequest();

    private RegisterUserDtoRequest registerUserDtoRequest { get; set; } = new RegisterUserDtoRequest();


    private async Task ValidLogin()
    {
        try
        {
            var response = await userProxy.Login(loginDtoRequest);
            if (response.success)
            {
                var auth = (AuthenticationService)authenticationStateProvider;
                await auth.Authenticate(response);
                navigationManager.NavigateTo("/");
            }
            else
            {

                await Swal.FireAsync(
                    new SweetAlertOptions
                        {
                            Position = "top-end",
                            Icon = "warning",
                            Title = response.msnError,
                            ShowConfirmButton = false,
                            Timer = 1500
                        });

            }
        }
        catch (Exception ex)
        {
            await Swal.FireAsync(
                    new SweetAlertOptions
                        {
                            Position = "top-end",
                            Icon = "error",
                            Title = ex.Message,
                            ShowConfirmButton = false,
                            Timer = 1500
                        });
        }

    }

    private async Task ValidRegister()
    {
        
        try
        {
            await userProxy.Register(registerUserDtoRequest);

            await Swal.FireAsync(
                   new SweetAlertOptions
                       {
                           Position = "top-end",
                           Icon = "success",
                           Title = "Cuenta Creada con exito",
                           ShowConfirmButton = false,
                           Timer = 1500
                       }
            );
            registerUserDtoRequest = new();      

            await iJSRuntime.InvokeVoidAsync("changeTab", "nav-sign-in-tab", "nav-register-tab");

        }
        catch (Exception ex)
        {

            await Swal.FireAsync(
                    new SweetAlertOptions
                        {
                            Position = "top-end",
                            Icon = "error",
                            Title = ex.Message,
                            ShowConfirmButton = true,
                            //Timer = 1500
                        });
        }

    }

}
